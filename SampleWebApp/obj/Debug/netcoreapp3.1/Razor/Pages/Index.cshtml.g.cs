#pragma checksum "C:\Users\Ben\Documents\Test\SampleWebApp\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0871167c75acd4e96c08876d87f69873f4de594e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(SampleWebApp.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace SampleWebApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Ben\Documents\Test\SampleWebApp\Pages\_ViewImports.cshtml"
using SampleWebApp;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0871167c75acd4e96c08876d87f69873f4de594e", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6335b3a2e4bd3c952a298ca537144ebf809a4cc7", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Ben\Documents\Test\SampleWebApp\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <div class=""text-center"">
        <h1 class=""display-4"">Why do I want to work at Berkshire Hathaway Homestate Companies?</h1>
        <button type=""button"" onclick=""seedDatabase()"">Seed Database with Reasons</button>
        <button type=""button"" onclick=""showSelectDialog()"">Load a Reason</button>
        <button type=""button"" onclick=""loadAllReasons()"">Load All Reasons</button>
        <div class=""feedback""></div>
        <div id=""hiring_reasons""></div>
        <input type=""hidden"" id=""database_seeded"" value=""0"" />
        <div id=""select_dialog"" title=""Choose a Reason"">
            <p>Enter an integer to select that reason.</p>
            <input id=""select_input"" />
            <button type=""button"" onclick=""loadReason()"">Load</button>
        </div>
    </div>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(function () {
            $('#select_dialog').dialog({
                autoOpen: false,
                height: ""auto"",
                width: ""auto"",
                close: function (event, ui) {
                    $('#select_input').val("""");
                }
            });
        });
        function loadAllReasons() {
            $.ajax({
                type: ""GET"",
                url: ""https://localhost:44379/api/ReasonToHire/"",
                data: JSON.stringify({ }),
                dataType: ""json"",
                contentType: 'application/json',
                success: function (response) {
                    $('.feedback').html("""");
                    $('#hiring_reasons').html("""");
                    response.forEach(next => {
                        $('#hiring_reasons').append(""<h2>"" + next.name + ""</h2><p>"" + next.text + ""</p>"");
                    });
                },
                failure: function (respons");
                WriteLiteral(@"e) {

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $('#hiring_reasons').html("""");
                    $("".feedback"").html(""An error occured while loading the reasons."");
                }
            });
        }
        function loadReason() {
            var reasonNumber = $('#select_input').val();
            $('#select_dialog').dialog(""close"");
            var intRegex = /^\d$/;
            if (!intRegex.test(reasonNumber)) {
                $("".feedback"").html(""You have to enter an integer."");
                return;
            }
            $.ajax({
                type: ""GET"",
                url: ""https://localhost:44379/api/ReasonToHire/"" + reasonNumber,
                data: JSON.stringify({ id: reasonNumber }),
                dataType: ""json"",
                contentType: 'application/json',
                success: function (response) {
                    $('.feedback').html("""");
                    $('#hiring");
                WriteLiteral(@"_reasons').html(""<h2>"" + response.name + ""</h2><p>"" + response.text + ""</p>"");
                },
                failure: function (response) {
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $('#hiring_reasons').html("""");
                    $("".feedback"").html(""That number doesn't correspond to a reason."");
                }
            });
        }
        function showSelectDialog() {
            $('#select_dialog').dialog(""open"");
        }
        //this will seed the database with some of the many reasons I want to work at Berkshire Hathaway Homestate Companies
        function seedDatabase() {
            if ($('#database_seeded').val() != ""0"") {
                $('.feedback').html(""You've already seeded the database- repeating the reasons won't help."");
            }
            else {
                $('#database_seeded').val(""1"");
                $.ajax({
                    type: ""POST"",
                    url: ""http");
                WriteLiteral(@"s://localhost:44379/api/ReasonToHire/"",
                    data: JSON.stringify({ ""name"": ""Exciting Technology"", ""text"": ""BHHC is using modern technology and architecture in an enterprise environment, and I want to further explore and learn about your tech stack."" }),
                    dataType: ""json"",
                    contentType: 'application/json',
                    success: function (response) {
                        $("".feedback"").append(""<p>Reason #"" + response.id + "" created!</p>"");
                    },
                    failure: function (response) {

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        
                    }
                });
                $.ajax({
                    type: ""POST"",
                    url: ""https://localhost:44379/api/ReasonToHire/"",
                    data: JSON.stringify({ ""name"": ""Team Environment"", ""text"": ""The team members that I have interacted with have really ");
                WriteLiteral(@"impressed me, and are the kind of coworkers I want to work with."" }),
                    dataType: ""json"",
                    contentType: 'application/json',
                    success: function (response) {
                        $("".feedback"").append(""<p>Reason #"" + response.id + "" created!</p>"");
                    },
                    failure: function (response) {

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        
                    }
                });
                $.ajax({
                    type: ""POST"",
                    url: ""https://localhost:44379/api/ReasonToHire/"",
                    data: JSON.stringify({ ""name"": ""Stable Work Situation"", ""text"": ""After having worked for a startup, I value stability in my career and want to work somewhere that I know I has the strength to survive disasters like COVID-19."" }),
                    dataType: ""json"",
                    contentType: 'application/js");
                WriteLiteral(@"on',
                    success: function (response) {
                        $("".feedback"").append(""<p>Reason #"" + response.id + "" created!</p>"");
                    },
                    failure: function (response) {

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        
                    }
                });
                $.ajax({
                    type: ""POST"",
                    url: ""https://localhost:44379/api/ReasonToHire/"",
                    data: JSON.stringify({ ""name"": ""Quality Benefits"", ""text"": ""Health insurance, life insurance, and a 401k are often overlooked benefits, but are high on my list of priorities."" }),
                    dataType: ""json"",
                    contentType: 'application/json',
                    success: function (response) {
                        $("".feedback"").append(""<p>Reason #"" + response.id + "" created!</p>"");
                    },
                    failure: fu");
                WriteLiteral("nction (response) {\r\n\r\n                    },\r\n                    error: function (xhr, ajaxOptions, thrownError) {\r\n                        \r\n                    }\r\n                });\r\n            }\r\n        }\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
